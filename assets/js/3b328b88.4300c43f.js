"use strict";(self.webpackChunkstarwhale_docs=self.webpackChunkstarwhale_docs||[]).push([[2401],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var m=a.createContext({}),p=function(e){var t=a.useContext(m),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,m=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),s=p(n),c=r,k=s["".concat(m,".").concat(c)]||s[c]||u[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=s;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},26117:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var a=n(83117),r=(n(67294),n(3905));const l={title:"swcli runtime"},i=void 0,o={unversionedId:"reference/swcli/runtime",id:"version-0.5.9/reference/swcli/runtime",title:"swcli runtime",description:"Overview",source:"@site/versioned_docs/version-0.5.9/reference/swcli/runtime.md",sourceDirName:"reference/swcli",slug:"/reference/swcli/runtime",permalink:"/0.5.9/reference/swcli/runtime",draft:!1,editUrl:"https://github.com/star-whale/docs/tree/main/versioned_docs/version-0.5.9/reference/swcli/runtime.md",tags:[],version:"0.5.9",frontMatter:{title:"swcli runtime"},sidebar:"mainSidebar",previous:{title:"swcli dataset",permalink:"/0.5.9/reference/swcli/dataset"},next:{title:"swcli job",permalink:"/0.5.9/reference/swcli/job"}},m={},p=[{value:"Overview",id:"overview",level:2},{value:"swcli runtime activate",id:"activate",level:2},{value:"swcli runtime build",id:"build",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Examples for Starwhale Runtime building",id:"examples-for-starwhale-runtime-building",level:3},{value:"swcli runtime copy",id:"copy",level:2},{value:"Examples for Starwhale Runtime copy",id:"examples-for-starwhale-runtime-copy",level:3},{value:"swcli runtime dockerize",id:"dockerize",level:2},{value:"swcli runtime extract",id:"extract",level:2},{value:"swcli runtime history",id:"history",level:2},{value:"swcli runtime info",id:"info",level:2},{value:"Examples for Starwhale Runtime info",id:"examples-for-starwhale-runtime-info",level:3},{value:"swcli runtime list",id:"list",level:2},{value:"swcli runtime recover",id:"recover",level:2},{value:"swcli runtime remove",id:"remove",level:2},{value:"swcli runtime tag",id:"tag",level:2}],d={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime [OPTIONS] <SUBCOMMAND> [ARGS]...\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime")," command includes the following subcommands:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"activate"),"(",(0,r.kt)("inlineCode",{parentName:"li"},"actv"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"build")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"copy"),"(",(0,r.kt)("inlineCode",{parentName:"li"},"cp"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dockerize")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"extract")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"history")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"info")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"list"),"(",(0,r.kt)("inlineCode",{parentName:"li"},"ls"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"recover")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"remove"),"(",(0,r.kt)("inlineCode",{parentName:"li"},"rm"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"tag"))),(0,r.kt)("h2",{id:"activate"},"swcli runtime activate"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime activate [OPTIONS] <RUNTIME>\n")),(0,r.kt)("p",null,"Like ",(0,r.kt)("inlineCode",{parentName:"p"},"source venv/bin/activate")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"conda activate xxx"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime activate")," setups a new python environment according to the settings of the specified runtime. When the current shell is closed or switched to another one, you need to reactivate the runtime.",(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME")," is a ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URI"),"."),(0,r.kt)("p",null,"If you want to quit the activated runtime environment, please run ",(0,r.kt)("inlineCode",{parentName:"p"},"venv deactivate")," in the venv environment or ",(0,r.kt)("inlineCode",{parentName:"p"},"conda deactivate")," in the conda environment."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime activate")," command will build a Python isolated environment and download relevant Python packages according to the definition of the Starwhale runtime when activating the environment for the first time. This process may spend a lot of time."),(0,r.kt)("h2",{id:"build"},"swcli runtime build"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime build [OPTIONS]\n")),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime build")," command can build a shareable and reproducible runtime environment suitable for ML/DL from various environments or ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime.yaml")," file."),(0,r.kt)("h3",{id:"parameters"},"Parameters"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Parameters related to runtime building methods:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-c")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--conda")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find the corresponding conda environment by conda env name, export Python dependencies to generate Starwhale runtime.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-cp")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--conda-prefix")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find the corresponding conda environment by conda env prefix path, export Python dependencies to generate Starwhale runtime.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-v")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--venv")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Find the corresponding venv environment by venv directory address, export Python dependencies to generate Starwhale runtime.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-s")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--shell")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Export Python dependencies according to current shell environment to generate Starwhale runtime.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-y")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--yaml")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"runtime.yaml")," in ",(0,r.kt)("inlineCode",{parentName:"td"},"cwd")," directory"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Build Starwhale runtime according to user-defined ",(0,r.kt)("inlineCode",{parentName:"td"},"runtime.yaml"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-d")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--docker")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Use the docker image as Starwhale runtime.")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"The parameters for runtime building methods are mutually exclusive, only one method can be specified"),". If not specified, it will use ",(0,r.kt)("inlineCode",{parentName:"p"},"--yaml")," method to read ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime.yaml")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"cwd")," directory to build Starwhale runtime."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Other parameters:")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Scope"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--project")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-p")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Global"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"/0.5.9/swcli/uri#defaultProject"},"Default project")),(0,r.kt)("td",{parentName:"tr",align:null},"Project URI")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-del")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--disable-env-lock")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"runtime.yaml")," mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to install dependencies in runtime.yaml and lock the version information of related dependencies. The dependencies will be locked by default.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-nc")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--no-cache")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"runtime.yaml")," mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to delete the isolated environment and install related dependencies from scratch. By default dependencies will be installed in the existing isolated environment.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cuda")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"conda/venv/shell mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Choice","[11.3/11.4/11.5/11.6/11.7/]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"CUDA version, CUDA will not be used by default.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--cudnn")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"conda/venv/shell mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Choice","[8/]"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"cuDNN version, cuDNN will not be used by default.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--arch")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"conda/venv/shell mode"),(0,r.kt)("td",{parentName:"tr",align:null},"Choice","[amd64/arm64/noarch]"),(0,r.kt)("td",{parentName:"tr",align:null},"noarch"),(0,r.kt)("td",{parentName:"tr",align:null},"Architecture")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-epo")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--emit-pip-options")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Global"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to export ",(0,r.kt)("inlineCode",{parentName:"td"},"~/.pip/pip.conf"),", exported by default.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-ecc")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"--emit-condarc")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Global"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to export ",(0,r.kt)("inlineCode",{parentName:"td"},"~/.condarc"),", exported by default.")))),(0,r.kt)("h3",{id:"examples-for-starwhale-runtime-building"},"Examples for Starwhale Runtime building"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"#- from runtime.yaml:\nswcli runtime build  # use the current directory as the workdir and use the default runtime.yaml file\nswcli runtime build -y example/pytorch/runtime.yaml # use example/pytorch/runtime.yaml as the runtime.yaml file\nswcli runtime build --yaml runtime.yaml # use runtime.yaml at the current directory as the runtime.yaml file\n\n#- from conda name:\nswcli runtime build -c pytorch # lock pytorch conda environment and use `pytorch` as the runtime name\nswcli runtime build --conda pytorch --name pytorch-runtime # use `pytorch-runtime` as the runtime name\nswcli runtime build --conda pytorch --cuda 11.4 # specify the cuda version\nswcli runtime build --conda pytorch --arch noarch # specify the system architecture\n\n#- from conda prefix path:\nswcli runtime build --conda-prefix /home/starwhale/anaconda3/envs/pytorch # get conda prefix path by `conda info --envs` command\n\n#- from venv prefix path:\nswcli runtime build -v /home/starwhale/.virtualenvs/pytorch\nswcli runtime build --venv /home/starwhale/.local/share/virtualenvs/pytorch --arch amd64\n\n#- from docker image:\nswcli runtime build --docker pytorch/pytorch:1.9.0-cuda11.1-cudnn8-runtime  # use the docker image as the runtime directly\n\n#- from shell:\nswcli runtime build -s --cuda 11.4 --cudnn 8 # specify the cuda and cudnn version\nswcli runtime build --shell --name pytorch-runtime # lock the current shell environment and use `pytorch-runtime` as the runtime name\n")),(0,r.kt)("h2",{id:"copy"},"swcli runtime copy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime copy [OPTIONS] <SRC> <DEST>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime copy")," copies from ",(0,r.kt)("inlineCode",{parentName:"p"},"SRC")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"DEST"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"SRC")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"DEST")," are both ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URIs"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--force")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-f")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, ",(0,r.kt)("inlineCode",{parentName:"td"},"DEST")," will be overwritten if it exists; otherwise, this command displays an error message.")))),(0,r.kt)("h3",{id:"examples-for-starwhale-runtime-copy"},"Examples for Starwhale Runtime copy"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"#- copy cloud instance(pre-k8s) mnist project's mnist-cloud runtime to local project(myproject) with a new runtime name 'mnist-local'\nswcli runtime cp cloud://pre-k8s/project/mnist/mnist-cloud/version/ge3tkylgha2tenrtmftdgyjzni3dayq local/project/myproject/mnist-local\n\n#- copy cloud instance(pre-k8s) mnist project's mnist-cloud runtime to local default project(self) with the cloud instance runtime name 'mnist-cloud'\nswcli runtime cp cloud://pre-k8s/project/runtime/mnist/mnist-cloud/version/ge3tkylgha2tenrtmftdgyjzni3dayq .\n\n#- copy cloud instance(pre-k8s) mnist project's mnist-cloud runtime to local project(myproject) with the cloud instance runtime name 'mnist-cloud'\nswcli runtime cp cloud://pre-k8s/project/mnist/mnist-cloud/version/ge3tkylgha2tenrtmftdgyjzni3dayq . -dlp myproject\n\n#- copy cloud instance(pre-k8s) mnist project's mnist-cloud runtime to local default project(self) with a runtime name 'mnist-local'\nswcli runtime cp cloud://pre-k8s/project/runtime/mnist/mnist-cloud/version/ge3tkylgha2tenrtmftdgyjzni3dayq mnist-local\n\n#- copy cloud instance(pre-k8s) mnist project's mnist-cloud runtime to local project(myproject) with a runtime name 'mnist-local'\nswcli runtime cp cloud://pre-k8s/project/mnist/mnist-cloud/version/ge3tkylgha2tenrtmftdgyjzni3dayq mnist-local -dlp myproject\n\n#- copy standalone instance(local) default project(self)'s mnist-local runtime to cloud instance(pre-k8s) mnist project with a new runtime name 'mnist-cloud'\nswcli runtime cp mnist-local/version/latest cloud://pre-k8s/project/mnist/mnist-cloud\n\n#- copy standalone instance(local) default project(self)'s mnist-local runtime to cloud instance(pre-k8s) mnist project with standalone instance runtime name 'mnist-local'\nswcli runtime cp mnist-local/version/latest cloud://pre-k8s/project/mnist\n\n#- copy standalone instance(local) default project(self)'s mnist-local runtime to cloud instance(pre-k8s) mnist project without 'cloud://' prefix\nswcli runtime cp mnist-local/version/latest pre-k8s/project/mnist\n\n#- copy standalone instance(local) project(myproject)'s mnist-local runtime to cloud instance(pre-k8s) mnist project with standalone instance runtime name 'mnist-local'\nswcli runtime cp local/project/myproject/runtime/mnist-local/version/latest cloud://pre-k8s/project/mnist\n")),(0,r.kt)("h2",{id:"dockerize"},"swcli runtime dockerize"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime dockerize [OPTIONS] <RUNTIME>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime dockerize")," generates a docker image based on the specified runtime. Starwhale uses ",(0,r.kt)("inlineCode",{parentName:"p"},"docker buildx")," to create the image. Docker 19.03 or later is required to run this command."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME")," is a ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URI"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--tag")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-t")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The tag of the docker image. This option can be repeated multiple times.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--push")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, push the image to the docker registry")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--platform")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null},"amd64"),(0,r.kt)("td",{parentName:"tr",align:null},"The target platform\uff0ccan be either amd64 or arm64. This option can be repeated multiple times to create a multi-platform image.")))),(0,r.kt)("p",null,"Here is the English translation:"),(0,r.kt)("h2",{id:"extract"},"swcli runtime extract"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [Global Options] runtime extract [Options] <RUNTIME>\n")),(0,r.kt)("p",null,"Starwhale runtimes use the compressed packages to distribute. The ",(0,r.kt)("inlineCode",{parentName:"p"},"runtime extract")," command can be used to extract the runtime package for further customization and modification."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--force")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-f")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Whether to delete and re-extract if there is already an extracted Starwhale runtime in the target directory.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--target-dir")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Custom extraction directory. If not specified, it will be extracted to the default Starwhale runtime workdir. The command log will show the directory location.")))),(0,r.kt)("h2",{id:"history"},"swcli runtime history"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime history [OPTIONS] <RUNTIME>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime history")," outputs all history versions of the specified Starwhale Runtime."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME")," is a ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URI"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--fullname")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Show the full version name. Only the first 12 characters are shown if this option is false.")))),(0,r.kt)("h2",{id:"info"},"swcli runtime info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime info [OPTIONS] <RUNTIME>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime info")," outputs detailed information about a specified Starwhale Runtime version."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME")," is a ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URI"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--output-filter")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-of")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Choice of ","[basic/runtime_yaml/manifest/lock/all]"),(0,r.kt)("td",{parentName:"tr",align:null},"basic"),(0,r.kt)("td",{parentName:"tr",align:null},"Filter the output content. Only standalone instance supports this option.")))),(0,r.kt)("h3",{id:"examples-for-starwhale-runtime-info"},"Examples for Starwhale Runtime info"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli runtime info pytorch # show basic info from the latest version of runtime\nswcli runtime info pytorch/version/v0  # show basic info\nswcli runtime info pytorch/version/v0 --output-filter basic  # show basic info\nswcli runtime info pytorch/version/v1 -of runtime_yaml  # show runtime.yaml content\nswcli runtime info pytorch/version/v1 -of lock # show auto lock file content\nswcli runtime info pytorch/version/v1 -of manifest # show _manifest.yaml content\nswcli runtime info pytorch/version/v1 -of all # show all info of the runtime\n")),(0,r.kt)("h2",{id:"list"},"swcli runtime list"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime list [OPTIONS]\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime list")," shows all Starwhale Runtimes."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--project")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"The URI of the project to list. Use the ",(0,r.kt)("a",{parentName:"td",href:"/0.5.9/swcli/uri#defaultProject"},"default project")," if not specified.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--fullname")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Show the full version name. Only the first 12 characters are shown if this option is false.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--show-removed")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-sr")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"If true, include runtimes that are removed but not garbage collected.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--page")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"The starting page number.  Server and cloud instances only.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--size")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Integer"),(0,r.kt)("td",{parentName:"tr",align:null},"20"),(0,r.kt)("td",{parentName:"tr",align:null},"The number of items in one page. Server and cloud instances only.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--filter")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-fl")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"String"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null},"Show only Starwhale Runtimes that match specified filters. This option can be used multiple times in one command.")))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Filter"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},"Key-Value"),(0,r.kt)("td",{parentName:"tr",align:null},"The name prefix of runtimes"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--filter name=pytorch"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"owner")),(0,r.kt)("td",{parentName:"tr",align:null},"Key-Value"),(0,r.kt)("td",{parentName:"tr",align:null},"The runtime owner name"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--filter owner=starwhale"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"latest")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag"),(0,r.kt)("td",{parentName:"tr",align:null},"If specified, it shows only the latest version."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--filter latest"))))),(0,r.kt)("h2",{id:"recover"},"swcli runtime recover"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime recover [OPTIONS] <RUNTIME>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime recover")," can recover previously removed Starwhale Runtimes or versions."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME")," is a ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URI"),". If the version part of the URI is omitted, all removed versions are recovered."),(0,r.kt)("p",null,"Garbage-collected Starwhale Runtimes or versions can not be recovered, as well as those are removed with the ",(0,r.kt)("inlineCode",{parentName:"p"},"--force")," option."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--force")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-f")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", overwrite the Starwhale Runtime or version with the same name or version id.")))),(0,r.kt)("h2",{id:"remove"},"swcli runtime remove"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime remove [OPTIONS] <RUNTIME>\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime remove")," removes the specified Starwhale Runtime or version."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME")," is a ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URI"),". If the version part of the URI is omitted, all versions are removed."),(0,r.kt)("p",null,"Removed Starwhale Runtimes or versions can be recovered by ",(0,r.kt)("inlineCode",{parentName:"p"},"swcli runtime recover")," before garbage collection. Use the ",(0,r.kt)("inlineCode",{parentName:"p"},"-- force")," option to persistently remove a Starwhale Runtime or version."),(0,r.kt)("p",null,"Removed Starwhale Runtimes or versions can be listed by ",(0,r.kt)("inlineCode",{parentName:"p"},"swcli runtime list --show-removed"),"."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--force")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-f")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", persistently delete the Starwhale Runtime or version. It can not be recovered.")))),(0,r.kt)("h2",{id:"tag"},"swcli runtime tag"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"swcli [GLOBAL OPTIONS] runtime tag [OPTIONS] <RUNTIME> [TAGS]...\n")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"runtime tag")," attaches a tag to a specified Starwhale Runtime version. The tag can be used in a runtime URI instead of the version id."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"RUNTIME")," is a ",(0,r.kt)("a",{parentName:"p",href:"/0.5.9/swcli/uri#model-dataset-runtime"},"Runtime URI"),"."),(0,r.kt)("p",null,"Each runtime version can have any number of tags\uff0c but duplicated tag names are not allowed in the same runtime."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"runtime tag")," only works for the Standalone Instance.")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Option"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Defaults"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--remove")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-r")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Remove the tag if true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"--quiet")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"-q")),(0,r.kt)("td",{parentName:"tr",align:null},"N"),(0,r.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"False"),(0,r.kt)("td",{parentName:"tr",align:null},"Ignore errors, for example, removing tags that do not exist.")))))}u.isMDXComponent=!0}}]);