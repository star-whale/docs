"use strict";(self.webpackChunkstarwhale_docs=self.webpackChunkstarwhale_docs||[]).push([[66051],{3905:(e,t,a)=>{a.d(t,{Zo:()=>s,kt:()=>u});var n=a(67294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var p=n.createContext({}),m=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},s=function(e){var t=m(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),k=m(a),u=l,N=k["".concat(p,".").concat(u)]||k[u]||d[u]||i;return a?n.createElement(N,r(r({ref:t},s),{},{components:a})):n.createElement(N,r({ref:t},s))}));function u(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,r=new Array(i);r[0]=k;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var m=2;m<i;m++)r[m]=a[m];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},71024:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var n=a(83117),l=(a(67294),a(3905));const i={title:"Starwhale \u6570\u636e\u96c6 SDK"},r=void 0,o={unversionedId:"reference/sdk/dataset",id:"version-0.6.9/reference/sdk/dataset",title:"Starwhale \u6570\u636e\u96c6 SDK",description:"dataset",source:"@site/i18n/zh/docusaurus-plugin-content-docs/version-0.6.9/reference/sdk/dataset.md",sourceDirName:"reference/sdk",slug:"/reference/sdk/dataset",permalink:"/zh/0.6.9/reference/sdk/dataset",draft:!1,editUrl:"https://github.com/star-whale/docs/tree/main/versioned_docs/version-0.6.9/reference/sdk/dataset.md",tags:[],version:"0.6.9",frontMatter:{title:"Starwhale \u6570\u636e\u96c6 SDK"},sidebar:"mainSidebar",previous:{title:"Python SDK \u6982\u89c8",permalink:"/zh/0.6.9/reference/sdk/overview"},next:{title:"Starwhale \u6570\u636e\u7c7b\u578b SDK",permalink:"/zh/0.6.9/reference/sdk/type"}},p={},m=[{value:"dataset",id:"dataset",level:2},{value:"\u53c2\u6570",id:"dataset-params",level:3},{value:"\u4f7f\u7528\u793a\u4f8b",id:"dataset-example",level:3},{value:"class starwhale.Dataset",id:"class-starwhaledataset",level:2},{value:"from_huggingface",id:"from_huggingface",level:3},{value:"\u53c2\u6570",id:"hf-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"hf-example",level:4},{value:"from_json",id:"from_json",level:3},{value:"\u53c2\u6570",id:"json-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"json-example",level:4},{value:"from_folder",id:"from_folder",level:3},{value:"\u53c2\u6570",id:"folder-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b ${folder-example}",id:"\u4f7f\u7528\u793a\u4f8b-folder-example",level:4},{value:"__iter__",id:"__iter__",level:3},{value:"batch_iter",id:"batch_iter",level:3},{value:"\u53c2\u6570",id:"batch-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"batch-example",level:4},{value:"__getitem__",id:"__getitem__",level:3},{value:"__setitem__",id:"__setitem__",level:3},{value:"\u53c2\u6570",id:"set-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"set-example",level:4},{value:"__delitem__",id:"__delitem__",level:3},{value:"append",id:"append",level:3},{value:"extend",id:"extend",level:3},{value:"commit",id:"commit",level:3},{value:"\u53c2\u6570",id:"commit-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"commit-example",level:4},{value:"readonly",id:"readonly",level:3},{value:"loading_version",id:"loading_version",level:3},{value:"pending_commit_version",id:"pending_commit_version",level:3},{value:"committed_version",id:"committed_version",level:3},{value:"remove",id:"remove",level:3},{value:"recover",id:"recover",level:3},{value:"summary",id:"summary",level:3},{value:"history",id:"history",level:3},{value:"flush",id:"flush",level:3},{value:"close",id:"close",level:3},{value:"head",id:"head",level:3},{value:"fetch_one",id:"fetch_one",level:3},{value:"list",id:"list",level:3},{value:"copy",id:"copy",level:3},{value:"\u53c2\u6570",id:"copy-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"copy-example",level:4},{value:"to_pytorch",id:"to_pytorch",level:3},{value:"\u53c2\u6570",id:"pytorch-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"pytorch-example",level:4},{value:"to_tensorflow",id:"to_tensorflow",level:3},{value:"\u53c2\u6570",id:"tf-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"tf-example",level:4},{value:"with_builder_blob_config",id:"with_builder_blob_config",level:3},{value:"\u53c2\u6570",id:"builder-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"builder-example",level:4},{value:"with_loader_config",id:"with_loader_config",level:3},{value:"\u53c2\u6570",id:"loader-params",level:4},{value:"\u4f7f\u7528\u793a\u4f8b",id:"loader-example",level:4}],s={toc:m};function d(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"dataset"},"dataset"),(0,l.kt)("p",null,"\u83b7\u53d6 ",(0,l.kt)("inlineCode",{parentName:"p"},"starwhale.Dataset")," \u5bf9\u8c61\uff0c\u5305\u62ec\u521b\u5efa\u65b0\u7684\u6570\u636e\u96c6\u548c\u52a0\u8f7d\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u96c6\u4e24\u79cd\u65b9\u5f0f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@classmethod\ndef dataset(\n    cls,\n    uri: t.Union[str, Resource],\n    create: str = _DatasetCreateMode.auto,\n    readonly: bool = False,\n) -> Dataset:\n")),(0,l.kt)("h3",{id:"dataset-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"uri"),": (str \u6216 Resource, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Dataset URI \u683c\u5f0f\u7684\u5b57\u7b26\u4e32\u6216 Resource \u5bf9\u8c61\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"create"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u521b\u5efa\u6a21\u5f0f\uff0c\u5305\u62ec ",(0,l.kt)("inlineCode",{parentName:"li"},"auto"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"empty")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"forbid")," \u4e09\u79cd\u65b9\u5f0f\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"auto")," \u6a21\u5f0f: \u5982\u679c\u6570\u636e\u96c6\u5df2\u7ecf\u5b58\u5728\uff0c\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efa\u6570\u636e\u96c6\uff1b\u5982\u679c\u6570\u636e\u96c6\u4e0d\u5b58\u5728\uff0c\u5219\u81ea\u52a8\u521b\u5efa\u6570\u636e\u96c6\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"empty")," \u6a21\u5f0f: \u5982\u679c\u6570\u636e\u96c6\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u629b\u51fa\u5f02\u5e38\uff1b\u5982\u679c\u6570\u636e\u96c6\u4e0d\u5b58\u5728\uff0c\u5219\u81ea\u52a8\u521b\u5efa\u6570\u636e\u96c6\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"forbid")," \u6a21\u5f0f: \u5982\u679c\u6570\u636e\u96c6\u5df2\u7ecf\u5b58\u5728\uff0c\u5219\u4e0d\u505a\u4efb\u4f55\u4e8b\u60c5\uff1b\u5982\u679c\u6570\u636e\u96c6\u4e0d\u5b58\u5728\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002",(0,l.kt)("inlineCode",{parentName:"li"},"forbid")," \u6a21\u5f0f\u80fd\u786e\u4fdd\u6570\u636e\u96c6\u5b58\u5728\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"auto")," \u6a21\u5f0f\u662f\u9ed8\u8ba4\u503c\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"readonly"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u4e8e\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u96c6\uff0c\u53ef\u4ee5\u6307\u5b9a ",(0,l.kt)("inlineCode",{parentName:"li"},"readonly=True")," \u4fdd\u8bc1\u6570\u636e\u96c6\u4ee5\u53ea\u8bfb\u65b9\u5f0f\u52a0\u8f7d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"False"),"\u3002")))),(0,l.kt)("h3",{id:"dataset-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset, Image\n\n# create a new dataset named mnist, and add a row into the dataset\n# dataset("mnist") is equal to dataset("mnist", create="auto")\nds = dataset("mnist")\nds.exists()  # return False, "mnist" dataset is not existing.\nds.append({"img": Image(), "label": 1})\nds.commit()\nds.close()\n\n# load a cloud instance dataset in readonly mode\nds = dataset("cloud://remote-instance/project/starwhale/dataset/mnist", readonly=True)\nlabels = [row.features.label in ds]\nds.close()\n\n# load a read/write dataset with a specified version\nds = dataset("mnist/version/mrrdczdbmzsw")\nds[0].features.label = 1\nds.commit()\nds.close()\n\n# create an empty dataset\nds = dataset("mnist-empty", create="empty")\n\n# ensure the dataset existence\nds = dataset("mnist-existed", create="forbid")\n')),(0,l.kt)("h2",{id:"class-starwhaledataset"},"class starwhale.Dataset"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"starwhale.Dataset")," \u5b9e\u73b0 Starwhale \u6570\u636e\u96c6\u7684\u62bd\u8c61\uff0c\u80fd\u591f\u5bf9Standalone/Server/Cloud \u5b9e\u4f8b\u4e0a\u7684\u6570\u636e\u96c6\u8fdb\u884c\u64cd\u4f5c\u3002"),(0,l.kt)("h3",{id:"from_huggingface"},"from_huggingface"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"from_huggingface")," \u662f\u4e00\u4e2a classmethod \u65b9\u6cd5\uff0c\u80fd\u591f\u5c06 Huggingface \u4e0a\u7684\u6570\u636e\u96c6\u8f6c\u5316\u4e3a Starwhale \u6570\u636e\u96c6\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def from_huggingface(\n    cls,\n    name: str,\n    repo: str,\n    subset: str | None = None,\n    split: str | None = None,\n    revision: str = "main",\n    alignment_size: int | str = D_ALIGNMENT_SIZE,\n    volume_size: int | str = D_FILE_VOLUME_SIZE,\n    mode: DatasetChangeMode | str = DatasetChangeMode.PATCH,\n    cache: bool = True,\n    tags: t.List[str] | None = None,\n) -> Dataset:\n')),(0,l.kt)("h4",{id:"hf-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name"),": (str, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u540d\u79f0\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"repo"),": (str, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Huggingface\u7684\u6570\u636e\u96c6 Repo \u540d\u79f0\uff0c\u6bd4\u5982\uff1a ",(0,l.kt)("a",{parentName:"li",href:"https://huggingface.co/datasets/samsum"},"samsum"),", ",(0,l.kt)("a",{parentName:"li",href:"https://huggingface.co/datasets/fka/awesome-chatgpt-prompts"},"fka/awesome-chatgpt-prompts"),"\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"subset"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Huggingface\u7684\u6570\u636e\u96c6 subset \u540d\u79f0\uff0c\u5982\u679cHF\u6570\u636e\u96c6\u6709\u591a\u4e2a subsets, \u60a8\u52a1\u5fc5\u8981\u6307\u5b9a\u4e00\u4e2a subset\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"split"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Huggingface\u7684\u6570\u636e\u96c6\u4e2d Split \u540d\u79f0\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a split\uff0c\u5219\u6570\u636e\u96c6\u4e2d\u6240\u6709\u7684 splits \u6570\u636e\u90fd\u4f1a\u88ab\u6784\u5efa\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"revision"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Huggingface\u7684\u6570\u636e\u96c6\u7248\u672c\uff0c\u9ed8\u8ba4\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"main"),"\uff0c\u5373main\u5206\u652f\u7684\u6700\u65b0\u4e00\u6b21\u63d0\u4ea4\u3002\u53c2\u6570\u63a5\u53d7branch, tag \u6216 commit hash\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"alignment_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6 blob \u6587\u4ef6\u4e2d\u6570\u636e\u5bf9\u9f50\u7684\u5c3a\u5bf8\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"128"),"\uff0c\u5373128\u4e2a\u5b57\u8282\u5bf9\u9f50\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"volume_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6 blob \u6587\u4ef6\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u8d85\u8fc7\u540e\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 blob \u6587\u4ef6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"64MB"),"\uff0c\u5373\u6bcf\u4e2ablob\u6587\u4ef664MB\u5927\u5c0f\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mode"),": (str|DatasetChangeMode, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u66f4\u65b0\u7684\u6a21\u5f0f\uff0c\u5305\u62ec ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u6a21\u5f0f\u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"overwrite")," \u6a21\u5f0f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u6a21\u5f0f\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cache"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u662f\u5426\u4f7f\u7528 Huggingface \u7684\u672c\u5730\u7f13\u5b58\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4f7f\u7528\u7f13\u5b58\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7f13\u5b58 = \u4e0b\u8f7d\u6587\u4ef6\u7f13\u5b58 + \u672c\u5730Huggingface \u6570\u636e\u96c6\u7f13\u5b58\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tags"),": (List","[str]",", optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u96c6\u6807\u7b7e\u3002")))),(0,l.kt)("h4",{id:"hf-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import Dataset\nmyds = Dataset.from_huggingface("mnist", "mnist")\nprint(myds[0])\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import Dataset\nmyds = Dataset.from_huggingface("mmlu", "cais/mmlu", subset="anatomy", split="auxiliary_train", revision="7456cfb")\n')),(0,l.kt)("h3",{id:"from_json"},"from_json"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"from_json")," \u662f\u4e00\u4e2a classmethod \u65b9\u6cd5\uff0c\u80fd\u591f\u5c06 json \u5b57\u7b26\u4e32\u8f6c\u5316\u4e3a Starwhale \u6570\u636e\u96c6\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'@classmethod\ndef from_json(\n    cls,\n    name: str,\n    json_text: str,\n    field_selector: str = "",\n    alignment_size: int | str = D_ALIGNMENT_SIZE,\n    volume_size: int | str = D_FILE_VOLUME_SIZE,\n    mode: DatasetChangeMode | str = DatasetChangeMode.PATCH,\n    tags: t.List[str] | None = None,\n) -> Dataset:\n')),(0,l.kt)("h4",{id:"json-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name"),": (str, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u540d\u79f0"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"json_text"),": (str, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"json \u5b57\u7b26\u4e32\uff0c",(0,l.kt)("inlineCode",{parentName:"li"},"from_json")," \u51fd\u6570\u4f1a\u5e8f\u5217\u5316\u8be5\u5b57\u7b26\u4e32\u4e3a Python \u5bf9\u8c61\uff0c\u7136\u540e\u5f00\u59cb\u6784\u5efa Starwhale \u6570\u636e\u96c6\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"field_selector"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u53ef\u4ee5\u63d0\u53d6 json_text \u4e2d\u7279\u5b9a\u7684 array \u7ed3\u6784\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4ece json \u7684\u6839\u63d0\u53d6\u6570\u636e\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"alignment_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6 blob \u6587\u4ef6\u4e2d\u6570\u636e\u5bf9\u9f50\u7684\u5c3a\u5bf8\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"128"),"\uff0c\u5373128\u4e2a\u5b57\u8282\u5bf9\u9f50\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"volume_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6 blob \u6587\u4ef6\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u8d85\u8fc7\u540e\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 blob \u6587\u4ef6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"64MB"),"\uff0c\u5373\u6bcf\u4e2ablob\u6587\u4ef664MB\u5927\u5c0f\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mode"),": (str|DatasetChangeMode, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u66f4\u65b0\u7684\u6a21\u5f0f\uff0c\u5305\u62ec ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u6a21\u5f0f\u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"overwrite")," \u6a21\u5f0f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u6a21\u5f0f\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tags"),": (List","[str]",", optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u96c6\u6807\u7b7e\u3002")))),(0,l.kt)("h4",{id:"json-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import Dataset\nmyds = Dataset.from_json(\n    name="translation",\n    json_text=\'[{"en":"hello","zh-cn":"\u4f60\u597d"},{"en":"how are you","zh-cn":"\u6700\u8fd1\u600e\u4e48\u6837"}]\'\n)\nprint(myds[0].features.en)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import Dataset\nmyds = Dataset.from_json(\n    name="translation",\n    json_text=\'{"content":{"child_content":[{"en":"hello","zh-cn":"\u4f60\u597d"},{"en":"how are you","zh-cn":"\u6700\u8fd1\u600e\u4e48\u6837"}]}}\',\n    field_selector="content.child_content"\n)\nprint(myds[0].features["zh-cn"])\n')),(0,l.kt)("h3",{id:"from_folder"},"from_folder"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"from_folder")," \u662f\u4e00\u4e2a classmethod \u65b9\u6cd5\uff0c\u80fd\u591f\u8bfb\u53d6\u6307\u5b9a\u76ee\u5f55\u4e2d\u7684 Image/Video/Audio \u6570\u636e\uff0c\u5e76\u5c06\u5176\u81ea\u52a8\u8f6c\u5316\u4e3a Starwhale \u6570\u636e\u96c6\u3002\u8be5\u51fd\u6570\u652f\u6301\u5982\u4e0b\u7279\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u80fd\u591f\u9012\u5f52\u7684\u641c\u7d22\u76ee\u6807\u76ee\u5f55\u53ca\u5b50\u76ee\u5f55"),(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u4e09\u79cd\u7c7b\u578b\u7684\u6587\u4ef6\u63d0\u53d6\uff1a",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"image"),": \u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"li"},"png/jpg/jpeg/webp/svg/apng")," \u56fe\u7247\u7c7b\u578b\u3002\u56fe\u7247\u6587\u4ef6\u4f1a\u88ab\u8f6c\u5316\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"Starwhale.Image")," \u7c7b\u578b\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"video"),": \u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"li"},"mp4/webm/avi")," \u89c6\u9891\u7c7b\u578b\u3002\u89c6\u9891\u6587\u4ef6\u4f1a\u88ab\u8f6c\u5316\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"Starwhale.Video")," \u7c7b\u578b\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"audio"),": \u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"li"},"mp3/wav")," \u97f3\u9891\u7c7b\u578b\u3002\u97f3\u9891\u6587\u4ef6\u4f1a\u88ab\u8f6c\u5316\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"Starwhale.Audio")," \u7c7b\u578b\u3002"))),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u4e2a\u6587\u4ef6\u5bf9\u5e94\u6570\u636e\u96c6\u7684\u4e00\u6761\u8bb0\u5f55\uff0c\u6587\u4ef6\u5bf9\u5e94\u7684\u6570\u636e\u96c6\u5b57\u6bb5\u540d\u79f0\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"file"),"\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u82e5 ",(0,l.kt)("inlineCode",{parentName:"li"},"auto_label=True"),"\uff0c\u5219\u4f1a\u4f7f\u7528\u7236\u76ee\u5f55\u7684\u540d\u79f0\u4f5c\u4e3a\u8be5\u6761\u6570\u636e\u7684\u6807\u7b7e\uff0c\u5bf9\u5e94 ",(0,l.kt)("inlineCode",{parentName:"li"},"label")," \u5b57\u6bb5\u3002\u6839\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6\uff0c\u5219\u4e0d\u4f1a\u88ab\u6253\u6807\u7b7e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u82e5\u5b58\u5728\u4e0e image/video/audio \u540c\u540d\u7684 txt \u6587\u4ef6\uff0c\u5219\u8be5\u6587\u4ef6\u5185\u5bb9\u4f1a\u88ab\u4f5c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"caption")," \u5b57\u6bb5\u5185\u5bb9\u5b58\u653e\u5230\u6570\u636e\u96c6\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u82e5\u6839\u76ee\u5f55\u5b58\u5728 ",(0,l.kt)("inlineCode",{parentName:"li"},"metadata.csv")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"li"},"metadata.jsonl")," \u6587\u4ef6\uff0c\u5219\u4f1a\u81ea\u52a8\u8bfb\u53d6\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u5e76\u5c06\u5176\u901a\u8fc7\u6587\u4ef6\u8def\u5f84\u540d\u4f5c\u4e3a\u5173\u8054\uff0c\u5b58\u5165\u6570\u636e\u96c6\u4e2d\uff0c\u53ef\u4ee5\u7528\u6765\u6307\u5b9a meta \u4fe1\u606f\u3002",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"metadata.csv")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"metadata.jsonl")," \u6587\u4ef6\u662f\u4e92\u65a5\u7684\uff0c\u5f53\u90fd\u5b58\u5728\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u4f1a\u629b\u51fa\u5f02\u5e38\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"metadata.csv")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"metadata.jsonl")," \u6bcf\u884c\u8bb0\u5f55\u4e2d\u9700\u8981\u5305\u542b ",(0,l.kt)("inlineCode",{parentName:"li"},"file_name")," \u5b57\u6bb5\uff0c\u6307\u5411\u5bf9\u5e94\u6587\u4ef6\u7684\u8def\u5f84\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"metadata.csv")," \u6216 ",(0,l.kt)("inlineCode",{parentName:"li"},"metadata.jsonl")," \u5bf9\u4e8e\u6570\u636e\u96c6\u6784\u5efa\u662f\u53ef\u9009\u7684\u3002")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'@classmethod\ndef from_folder(\n    cls,\n    folder: str | Path,\n    kind: str | DatasetFolderSourceType,\n    name: str | Resource = "",\n    auto_label: bool = True,\n    alignment_size: int | str = D_ALIGNMENT_SIZE,\n    volume_size: int | str = D_FILE_VOLUME_SIZE,\n    mode: DatasetChangeMode | str = DatasetChangeMode.PATCH,\n    tags: t.List[str] | None = None,\n) -> Dataset:\n')),(0,l.kt)("h4",{id:"folder-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"folder"),": (str|Path, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6587\u4ef6\u5939\u8def\u5f84"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"kind"),": (str|DatasetFolderSourceType, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u7c7b\u578b\u8bbe\u7f6e\uff0c\u76ee\u524d\u652f\u6301 ",(0,l.kt)("inlineCode",{parentName:"li"},"image"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"video")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"audio")," \u4e09\u79cd\u7c7b\u578b\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f1a\u6839\u636e\u8bbe\u7f6e\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"kind")," \u503c\uff0c\u5728 ",(0,l.kt)("inlineCode",{parentName:"li"},"folder")," \u4e2d\u9012\u5f52\u5bfb\u627e\u5bf9\u5e94\u7c7b\u578b\u7684\u6587\u4ef6\u3002\u5176\u4ed6\u7c7b\u578b\u6587\u4ef6\u4f1a\u88ab\u5ffd\u7565\u6389\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name"),": (str|Resource, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u540d\u79f0\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u82e5\u4e0d\u6307\u5b9a\uff0c\u5219\u4f7f\u7528\u76ee\u5f55\u540d\u79f0\u4f5c\u4e3a\u6570\u636e\u96c6\u540d\u79f0\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"auto_label"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u662f\u5426\u6839\u636e\u7236\u76ee\u5f55\u7684\u540d\u5b57\u81ea\u52a8\u5bf9\u6bcf\u6761\u8bb0\u5f55\u6253\u6807\u7b7e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"True"),"\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"alignment_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6 blob \u6587\u4ef6\u4e2d\u6570\u636e\u5bf9\u9f50\u7684\u5c3a\u5bf8\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"128"),"\uff0c\u5373128\u4e2a\u5b57\u8282\u5bf9\u9f50\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"volume_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6 blob \u6587\u4ef6\u7684\u6700\u5927\u5c3a\u5bf8\uff0c\u8d85\u8fc7\u540e\u4f1a\u4ea7\u751f\u4e00\u4e2a\u65b0\u7684 blob \u6587\u4ef6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"64MB"),"\uff0c\u5373\u6bcf\u4e2ablob\u6587\u4ef664MB\u5927\u5c0f\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mode"),": (str|DatasetChangeMode, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u66f4\u65b0\u7684\u6a21\u5f0f\uff0c\u5305\u62ec ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u6a21\u5f0f\u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"overwrite")," \u6a21\u5f0f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u6a21\u5f0f\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tags"),": (List","[str]",", optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u6570\u636e\u96c6\u6807\u7b7e\u3002")))),(0,l.kt)("h4",{id:"\u4f7f\u7528\u793a\u4f8b-folder-example"},"\u4f7f\u7528\u793a\u4f8b ${folder-example}"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u51fd\u6570\u8c03\u7528\u793a\u4f8b"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import Dataset\n\n# create a my-image-dataset dataset from /path/to/image folder.\nds = Dataset.from_folder(\n    folder="/path/to/image",\n    kind="image",\n    name="my-image-dataset"\n)\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"caption")," \u793a\u4f8b"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"folder/dog/1.png\nfolder/dog/1.txt\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"1.txt")," \u4e2d\u7684\u5185\u5bb9\uff0c\u4f1a\u586b\u5145\u5230 ",(0,l.kt)("inlineCode",{parentName:"p"},"1.png")," \u6240\u5728\u884c\u4e2d ",(0,l.kt)("inlineCode",{parentName:"p"},"caption")," \u5b57\u6bb5\u4e2d\u3002")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"metadata.csv")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"metadata.jsonl")," \u793a\u4f8b"),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"metadata.csv")," \u5185\u5bb9\uff1a"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"file_name, caption\n1.png, dog\n2.png, cat\n")),(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"metadata.jsonl")," \u5185\u5bb9\uff1a"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-jsonl"},'{"file_name": "1.png", "caption": "dog"}\n{"file_name": "2.png", "caption": "cat"}\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u81ea\u52a8 label \u793a\u4f8b"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"folder/dog/1.png\nfolder/cat/2.png\nfolder/dog/3.png\nfolder/cat/4.png\n")),(0,l.kt)("p",{parentName:"li"},"\u751f\u6210\u7684\u6570\u636e\u96c6\u4e2d\u5305\u542b\u56db\u6761\u6570\u636e\uff0c\u5206\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"dog")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"cat")," \u4e24\u7c7b\u3002"))),(0,l.kt)("h3",{id:"__iter__"},"_","_","iter","_","_"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"__iter__")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u5426\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u8fed\u4ee3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\n\nds = dataset("mnist")\n\nfor item in ds:\n  print(item.index)\n  print(item.features.label)  # label \u548c img \u662f mnist\u6570\u636e\u96c6\u4e2d\u7684\u6570\u636e\u5217\n  print(item.features.img)\n')),(0,l.kt)("h3",{id:"batch_iter"},"batch_iter"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"batch_iter")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u5426\u6279\u91cf\u7684\u8fdb\u884c\u6570\u636e\u96c6\u8fed\u4ee3\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def batch_iter(\n    self, batch_size: int = 1, drop_not_full: bool = False\n) -> t.Iterator[t.List[DataRow]]:\n")),(0,l.kt)("h4",{id:"batch-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"batch_size"),": (int, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"batch\u7684\u5927\u5c0f\uff0c\u9ed8\u8ba4\u503c\u4e3a1\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"drop_not_full"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6700\u540e\u4e00\u7ec4batch\u6570\u636e\u6570\u91cf\u5c0f\u4e8e ",(0,l.kt)("inlineCode",{parentName:"li"},"batch_size")," \u65f6\uff0c\u8be5\u7ec4\u6570\u636e\u662f\u5426\u4f1a\u88ab\u629b\u5f03\u6389\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u662f\u4e0d\u629b\u5f03\u3002")))),(0,l.kt)("h4",{id:"batch-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\n\nds = dataset("mnist")\nfor batch_rows in ds.batch_iter(batch_size=2):\n    assert len(batch_rows) == 2\n    print(batch_rows[0].features)\n')),(0,l.kt)("h3",{id:"__getitem__"},"_","_","getitem","_","_"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"__getitem__")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u63d0\u4f9b\u6570\u636e\u96c6\u4e2d\u67d0\u4e9b\u884c\u6570\u636e\u7684\u83b7\u53d6\uff0c\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c Python \u7684 dict \u548c list \u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\n\nds = dataset("mock-int-index")\n\n# if the index type is string\nds["str_key"]  # get the DataRow by the "str_key" string key\nds["start":"end"]  # get a slice of the dataset by the range ("start", "end")\n\nds = dataset("mock-str-index")\n# if the index type is int\nds[1]  # get the DataRow by the 1 int key\nds[1:10:2] # get a slice of the dataset by the range (1, 10), step is 2\n')),(0,l.kt)("h3",{id:"__setitem__"},"_","_","setitem","_","_"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"__setitem__")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u63d0\u4f9b\u6570\u636e\u96c6\u4e2d\u884c\u6570\u636e\u7684\u66f4\u65b0\uff0c\u64cd\u4f5c\u65b9\u5f0f\u7c7b\u4f3c Python \u7684 dict \u7c7b\u578b\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"__setitem__")," \u652f\u6301\u591a\u7ebf\u7a0b\u5e76\u884c\u63d2\u5165\u6570\u636e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def __setitem__(\n    self, key: t.Union[str, int], value: t.Union[DataRow, t.Tuple, t.Dict]\n) -> None:\n")),(0,l.kt)("h4",{id:"set-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"key"),": (int|str, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"key")," \u5373\u4e3a\u6570\u636e\u96c6\u4e2d\u6bcf\u884c\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"index"),"\uff0c\u7c7b\u578b\u4e3a int \u6216 str\uff0c\u4e00\u4e2a\u6570\u636e\u96c6\u4e2d\u53ea\u63a5\u53d7\u4e00\u79cd\u7c7b\u578b\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value"),": (DataRow|tuple|dict, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")," \u5373\u4e3a\u6570\u636e\u96c6\u4e2d\u6bcf\u884c\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"features"),"\uff0c\u4e00\u822c\u5efa\u8bae\u7528 Python \u7684 dict \u7c7b\u578b\u3002")))),(0,l.kt)("h4",{id:"set-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u63d2\u5165\u6570\u636e")),(0,l.kt)("p",null,"\u5411 ",(0,l.kt)("inlineCode",{parentName:"p"},"test")," \u6570\u636e\u4e2d\u63d2\u5165\u4e24\u6761\u6570\u636e\uff0cindex\u5206\u522b\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"test")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"test2"),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\n\nwith dataset("test") as ds:\n  ds["test"] = {"txt": "abc", "int": 1}\n  ds["test2"] = {"txt": "bcd", "int": 2}\n  ds.commit()\n')),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5e76\u884c\u63d2\u5165\u6570\u636e")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset, Binary\nfrom concurrent.futures import as_completed, ThreadPoolExecutor\n\nds = dataset("test")\n\ndef _do_append(_start: int) -> None:\n  for i in range(_start, 100):\n    ds.append((i, {"data": Binary(), "label": i}))\n\npool = ThreadPoolExecutor(max_workers=10)\ntasks = [pool.submit(_do_append, i * 10) for i in range(0, 9)]\n\nds.commit()\nds.close()\n')),(0,l.kt)("h3",{id:"__delitem__"},"_","_","delitem","_","_"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"__delitem__")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7528\u6765\u5220\u9664\u6570\u636e\u96c6\u4e2d\u7684\u67d0\u4e9b\u884c\u6570\u636e\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def __delitem__(self, key: _ItemType) -> None:\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\n\nds = dataset("existed-ds")\ndel ds[6:9]\ndel ds[0]\nds.commit()\nds.close()\n')),(0,l.kt)("h3",{id:"append"},"append"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"append")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7528\u6765\u5411\u6570\u636e\u96c6\u4e2d\u6dfb\u52a0\u6570\u636e\uff0c\u7c7b\u4f3c Python list \u7684 append \u51fd\u6570\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6dfb\u52a0 features dict\uff0c\u6bcf\u884c\u6570\u636e\u81ea\u52a8 index \u4e3a int \u7c7b\u578b\uff0c\u4ece0\u5f00\u59cb\u81ea\u589e\u3002"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset, Image\n\nwith dataset("new-ds") as ds:\n  for i in range(0, 100):\n    ds.append({"label": i, "image": Image(f"folder/{i}.png")})\n  ds.commit()\n'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},"\u6dfb\u52a0 index + features dict\uff0c\u6570\u636e\u96c6\u4e2d\u6bcf\u884c\u6570\u636e\u7684 index \u4e0d\u4f1a\u88ab\u81ea\u52a8\u5904\u7406\u3002"),(0,l.kt)("pre",{parentName:"li"},(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from dataset import dataset, Image\n\nwith dataset("new-ds") as ds:\n  for i in range(0, 100):\n    ds.append((f"index-{i}", {"label": i, "image": Image(f"folder/{i}.png")}))\n\n  ds.commit()\n')))),(0,l.kt)("h3",{id:"extend"},"extend"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"extend")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7528\u6765\u5411\u6570\u636e\u96c6\u4e2d\u6279\u91cf\u6dfb\u52a0\u6570\u636e\uff0c\u7c7b\u4f3c Python list \u7684 extend \u51fd\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset, Text\n\nds = dataset("new-ds")\nds.extend([\n    (f"label-{i}", {"text": Text(), "label": i}) for i in range(0, 10)\n  ])\nds.commit()\nds.close()\n')),(0,l.kt)("h3",{id:"commit"},"commit"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"commit")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u8c03\u7528 commit \u65f6\u4f1a\u5c06\u5f53\u524d\u7f13\u5b58\u4e2d\u6570\u636e flush \u5230\u5b58\u50a8\u4e2d\uff0c\u5e76\u4ea7\u751f\u4e00\u4e2a\u6570\u636e\u96c6\u7248\u672c\uff0c\u540e\u7eed\u53ef\u4ee5\u7528\u8fd9\u4e2a\u7248\u672c\u4fe1\u606f\u52a0\u8f7d\u76f8\u5e94\u7684\u6570\u636e\u96c6\u5185\u5bb9\u3002"),(0,l.kt)("p",null,"\u5bf9\u4e8e\u4e00\u4e2a\u6570\u636e\u96c6\uff0c\u5982\u679c\u6dfb\u52a0\u4e00\u4e9b\u6570\u636e\u540e\uff0c\u5e76\u6ca1\u6709\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"commit")," \u65b9\u6cd5\uff0c\u800c\u662f\u76f4\u63a5\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"close")," \u6216\u9000\u51fa\u8fdb\u7a0b\uff0c\u90a3\u4e48\u8fd9\u4e9b\u6570\u636e\u4f9d\u65e7\u4f1a\u5199\u5165\u5230\u6570\u636e\u96c6\u4e2d\uff0c\u53ea\u662f\u6ca1\u6709\u4e00\u4e2a\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7248\u672c\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'@_check_readonly\ndef commit(\n    self,\n    tags: t.Optional[t.List[str]] = None,\n    message: str = "",\n    force_add_tags: bool = False,\n    ignore_add_tags_errors: bool = False,\n) -> str:\n')),(0,l.kt)("h4",{id:"commit-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"tags"),": (List(str), optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6307\u5b9a tags\uff0c\u53ef\u4ee5\u6307\u5b9a\u591a\u4e2atag\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"message"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u63d0\u4ea4\u4fe1\u606f\uff0c\u9ed8\u8ba4\u4e3a\u7a7a\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"force_add_tags"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53\u7ed9\u6539\u7248\u672c\u6dfb\u52a0\u6807\u7b7e\u65f6\uff0c\u5bf9\u4e8e server/cloud \u5b9e\u4f8b\uff0c\u82e5\u6807\u7b7e\u5df2\u7ecf\u88ab\u5e94\u7528\u5230\u5176\u4ed6\u6570\u636e\u96c6\u7248\u672c\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"force_add_tags=True")," \u53c2\u6570\u5f3a\u5236\u5c06\u6807\u7b7e\u6dfb\u52a0\u5230\u6b64\u7248\u672c\u4e0a\uff0c\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"False")," \u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ignore_add_tags_errors"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5ffd\u7565\u6dfb\u52a0\u6807\u7b7e\u662f\u5426\u629b\u51fa\u7684\u5f02\u5e38\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"False")," \u3002")))),(0,l.kt)("h4",{id:"commit-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\nwith dataset("mnist") as ds:\n    ds.append({"label": 1})\n    ds.commit(message="init commit")\n')),(0,l.kt)("h3",{id:"readonly"},"readonly"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"readonly")," \u662f\u4e00\u4e2a property \u5c5e\u6027\uff0c\u8868\u793a\u6570\u636e\u96c6\u662f\u5426\u53ea\u8bfb\uff0c\u8fd4\u56de\u503c\u4e3a bool \u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\nds = dataset("mnist", readonly=True)\nassert ds.readonly\n')),(0,l.kt)("h3",{id:"loading_version"},"loading_version"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"loading_version")," \u662f\u4e00\u4e2a property \u5c5e\u6027\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5f53\u52a0\u8f7d\u4e00\u4e2a\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u96c6\u65f6\uff0c\u8fd4\u56de\u7684\u662f\u6570\u636e\u96c6\u52a0\u8f7d\u7684\u5bf9\u5e94\u7248\u672c\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5bf9\u52a0\u8f7d\u4e00\u4e2a\u4e0d\u5b58\u5728\u7684\u6570\u636e\u96c6\u65f6\uff0c\u8fd4\u56de\u7684\u662f ",(0,l.kt)("inlineCode",{parentName:"li"},"pending_commit_version"),"\u3002")),(0,l.kt)("h3",{id:"pending_commit_version"},"pending_commit_version"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"pending_commit_version")," \u662f\u4e00\u4e2a property \u5c5e\u6027\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u8868\u793a\u5f85\u63d0\u4ea4\u7684\u7248\u672c\u4fe1\u606f\u3002\u5f53\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"commit")," \u65b9\u6cd5\u540e\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"pending_commit_version")," \u4f1a\u53d8\u6210 ",(0,l.kt)("inlineCode",{parentName:"p"},"committed_version"),"\u3002"),(0,l.kt)("h3",{id:"committed_version"},"committed_version"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"committed_version")," \u662f\u4e00\u4e2a property \u5c5e\u6027\uff0c\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u8868\u793a\u5df2\u7ecf\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"commit")," \u65b9\u6cd5\u540e\u751f\u6210\u7684\u7248\u672c\u4fe1\u606f\u3002\u5f53\u6ca1\u6709\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"commit")," \u65b9\u6cd5\u65f6\uff0c\u8bbf\u95ee\u8be5\u5c5e\u6027\u65f6\u7a0b\u5e8f\u4f1a\u629b\u51fa\u5f02\u5e38\u3002"),(0,l.kt)("h3",{id:"remove"},"remove"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"remove")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7b49\u4ef7\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"swcli dataset remove")," \u547d\u4ee4\uff0c\u80fd\u591f\u5220\u9664\u6570\u636e\u96c6\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def remove(self, force: bool = False) -> None:\n")),(0,l.kt)("h3",{id:"recover"},"recover"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"recover")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7b49\u4ef7\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"swcli dataset recover")," \u547d\u4ee4\uff0c\u80fd\u591f\u5bf9\u8f6f\u5220\u9664\u4e14\u672aGC\u7684\u6570\u636e\u96c6\u8fdb\u884c\u6062\u590d\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def recover(self, force: bool = False) -> None:\n")),(0,l.kt)("h3",{id:"summary"},"summary"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"summary")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7b49\u4ef7\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"swcli dataset summary")," \u547d\u4ee4\uff0c\u8fd4\u56de\u6570\u636e\u96c6\u6458\u8981\u4fe1\u606f\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def summary(self) -> t.Optional[DatasetSummary]:\n")),(0,l.kt)("h3",{id:"history"},"history"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"history")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7b49\u4ef7\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"swcli dataset history")," \u547d\u4ee4\uff0c\u8fd4\u56de\u6570\u636e\u96c6\u7684\u5386\u53f2\u8bb0\u5f55\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def history(self) -> t.List[t.Dict]:\n")),(0,l.kt)("h3",{id:"flush"},"flush"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"flush")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u591f\u5c06\u5185\u5b58\u4e2d\u6682\u5b58\u7684\u6570\u636e\u5237\u5230\u6301\u4e45\u5316\u5b58\u50a8\u4e2d\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"commit")," \u548c ",(0,l.kt)("inlineCode",{parentName:"p"},"close")," \u65b9\u6cd5\u4f1a\u81ea\u52a8\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"flush")," \u3002"),(0,l.kt)("h3",{id:"close"},"close"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"close")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u5173\u95ed\u5df2\u7ecf\u6253\u5f00\u7684\u6570\u636e\u96c6\u76f8\u5173\u94fe\u63a5\u3002",(0,l.kt)("inlineCode",{parentName:"p"},"Dataset")," \u4e5f\u5b9e\u73b0\u4e86 contextmanager\uff0c\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"with")," \u8bed\u6cd5\u540e\u53ef\u4ee5\u81ea\u52a8\u5173\u95ed\u6570\u636e\u96c6\uff0c\u4e0d\u9700\u8981\u4e3b\u52a8\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"close")," \u65b9\u6cd5\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\n\nds = dataset("mnist")\nds.close()\n\nwith dataset("mnist") as ds:\n  print(ds[0])\n')),(0,l.kt)("h3",{id:"head"},"head"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"head")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u591f\u663e\u793a\u6570\u636e\u96c6\u524dn\u884c\u6570\u636e\uff0c\u7b49\u4ef7\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"swcli dataset head")," \u547d\u4ee4\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def head(self, n: int = 5, skip_fetch_data: bool = False) -> t.List[DataRow]:\n")),(0,l.kt)("h3",{id:"fetch_one"},"fetch_one"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"fetch_one")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u83b7\u5f97\u6570\u636e\u96c6\u7684\u7b2c\u4e00\u6761\u8bb0\u5f55\uff0c\u76f8\u5f53\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"head(n=1)[0]"),"\u3002"),(0,l.kt)("h3",{id:"list"},"list"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"list")," \u662f\u4e00\u4e2a classmethod \u65b9\u6cd5\uff0c\u80fd\u591f\u5217\u51fa\u9879\u76ee URI \u4e0b\u7684 Starwhale \u6570\u636e\u96c6\uff0c\u7b49\u4ef7\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"swcli dataset list")," \u547d\u4ee4\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'@classmethod\ndef list(\n    cls,\n    project_uri: t.Union[str, Project] = "",\n    fullname: bool = False,\n    show_removed: bool = False,\n    page_index: int = DEFAULT_PAGE_IDX,\n    page_size: int = DEFAULT_PAGE_SIZE,\n) -> Tuple[DatasetListType, Dict[str, Any]]:\n')),(0,l.kt)("h3",{id:"copy"},"copy"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"copy")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u591f\u590d\u5236\u6570\u636e\u5230\u5176\u4ed6\u5b9e\u4f8b\u4e0a\uff0c\u7b49\u4ef7\u4e8e ",(0,l.kt)("inlineCode",{parentName:"p"},"swcli dataset copy")," \u547d\u4ee4\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'def copy(\n  self,\n  dest_uri: str,\n  dest_local_project_uri: str = "",\n  force: bool = False,\n  mode: str = DatasetChangeMode.PATCH.value,\n  ignore_tags: t.List[str] | None = None,\n) -> None:\n')),(0,l.kt)("h4",{id:"copy-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dest_uri"),": (str, required)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Dataset URI"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"dest_local_project_uri"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u4ece\u8fdc\u7aef\u590d\u5236\u5230\u672c\u5730 Standalone \u5b9e\u4f8b\u65f6\uff0c\u53ef\u4ee5\u6307\u5b9a\u5bf9\u5e94\u7684\u9879\u76ee URI\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"force"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5f53\u76ee\u6807\u5b9e\u4f8b\u4e0a\u5df2\u7ecf\u6709\u76f8\u540c\u7248\u672c\u7684\u6570\u636e\u96c6\u65f6\uff0c\u662f\u5426\u5f3a\u5236\u8986\u76d6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4e0d\u8986\u76d6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u590d\u5236\u6807\u7b7e\u5230\u8fdc\u7aef Server/Cloud \u5b9e\u4f8b\u65f6\uff0c\u82e5\u6807\u7b7e\u5df2\u7ecf\u88ab\u5176\u4ed6\u7248\u672c\u4f7f\u7528\uff0c\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"li"},"force=True")," \u53c2\u6570\u53ef\u4ee5\u5f3a\u5236\u53d8\u66f4\u6807\u7b7e\u5230\u672c\u7248\u672c\u4e0a\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"mode"),": (str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6\u590d\u5236\u6a21\u5f0f\uff0c\u5206\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u6a21\u5f0f \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"overwrite")," \u6a21\u5f0f\uff0c\u9ed8\u8ba4\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"patch")," \u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"patch"),": \u4f7f\u7528\u8865\u4e01\u65b9\u5f0f\u66f4\u65b0\u6570\u636e\u96c6\uff0c\u53ea\u66f4\u65b0\u8ba1\u5212\u53d8\u66f4\u7684\u884c\u548c\u5217\uff0c\u5728\u65b0\u751f\u6210\u7684\u7248\u672c\u4e2d\u4ecd\u80fd\u8bfb\u53d6\u5230\u672a\u53d7\u5f71\u54cd\u7684\u884c\u548c\u5217\u3002"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"overwrite"),": \u4f7f\u7528\u8986\u76d6\u65b9\u5f0f\u66f4\u65b0\u6570\u636e\u96c6\uff0c\u4f1a\u5c06\u539f\u6765\u7684\u6240\u6709\u884c\u90fd\u5220\u9664\uff0c\u7136\u540e\u518d\u8fdb\u884c\u66f4\u65b0\uff0c\u5728\u65b0\u751f\u6210\u7684\u7248\u672c\u4e2d\u8bfb\u53d6\u4e0d\u5230\u8001\u6570\u636e\u3002\u4f46\u8bf7\u653e\u5fc3\uff0c\u5220\u9664\u7684\u6570\u636e\u4f9d\u65e7\u53ef\u4ee5\u901a\u8fc7\u65e7\u7248\u672c\u8fdb\u884c\u8bbf\u95ee\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ignore_tags")," (List","[str]",", optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u590d\u5236\u6570\u636e\u96c6\u65f6\uff0c\u53ef\u4ee5\u5ffd\u7565\u7684\u81ea\u5b9a\u4e49\u6807\u7b7e\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u4f1a\u590d\u5236\u6240\u6709\u7528\u6237\u81ea\u5b9a\u4e49\u6807\u7b7e\u5230\u5176\u4ed6\u5b9e\u4f8b\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u590d\u5236\u6807\u7b7e\u4f1a\u5ffd\u7565 ",(0,l.kt)("inlineCode",{parentName:"li"},"latest")," \u548c ",(0,l.kt)("inlineCode",{parentName:"li"},"^v\\d+$")," \u5185\u5efa\u6807\u7b7e\u3002")))),(0,l.kt)("h4",{id:"copy-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\nds = dataset("mnist")\nds.copy("cloud://remote-instance/project/starwhale")\n')),(0,l.kt)("h3",{id:"to_pytorch"},"to_pytorch"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"to_pytorch")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u591f\u5c06 Starwhale \u6570\u636e\u96c6\u8f6c\u5316\u4e3a Pytorch \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"torch.utils.data.Dataset")," \u7c7b\u578b\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f20\u7ed9 ",(0,l.kt)("inlineCode",{parentName:"p"},"torch.utils.data.DataLoader")," \u8fdb\u884c\u4f7f\u7528\u3002"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c",(0,l.kt)("inlineCode",{parentName:"strong"},"to_pytorch")," \u51fd\u6570\u8fd4\u56de\u7684\u662f Pytorch \u7684 ",(0,l.kt)("inlineCode",{parentName:"strong"},"IterableDataset")),"\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def to_pytorch(\n    self,\n    transform: t.Optional[t.Callable] = None,\n    drop_index: bool = True,\n    skip_default_transform: bool = False,\n) -> torch.utils.data.Dataset:\n")),(0,l.kt)("h4",{id:"pytorch-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"transform"),": (callable, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u53d8\u6362\u51fd\u6570\uff0c\u80fd\u591f\u6309\u9700\u8f6c\u5316\u6570\u636e\u7c7b\u578b\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"drop_index"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u662f\u5426\u629b\u5f03\u6389 ",(0,l.kt)("inlineCode",{parentName:"li"},"index")," \u5b57\u6bb5\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"skip_default_transform"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e ",(0,l.kt)("inlineCode",{parentName:"li"},"transform"),"\uff0c \u9ed8\u8ba4\u72b6\u6001\u4e0b\u4f1a\u4f7f\u7528 Starwhale \u5185\u5efa\u7684 transform \u51fd\u6570\uff0c\u5bf9\u6570\u636e\u8fdb\u884c\u8f6c\u5316\uff0c\u53ef\u4ee5\u901a\u8fc7 ",(0,l.kt)("inlineCode",{parentName:"li"},"skip_default_transform")," \u53c2\u6570\u7981\u7528\u5185\u5efa\u6570\u636e\u8f6c\u5316\u3002")))),(0,l.kt)("h4",{id:"pytorch-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import torch.utils.data as tdata\nfrom starwhale import dataset\n\nds = dataset("mnist")\n\ntorch_ds = ds.to_pytorch()\ntorch_loader = tdata.DataLoader(torch_ds, batch_size=2)\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'import torch.utils.data as tdata\nfrom starwhale import dataset\n\nwith dataset("mnist") as ds:\n    for i in range(0, 10):\n        ds.append({"txt": Text(f"data-{i}"), "label": i})\n\n    ds.commit()\n\ndef _custom_transform(data: t.Any) -> t.Any:\n    data = data.copy()\n    txt = data["txt"].to_str()\n    data["txt"] = f"custom-{txt}"\n    return data\n\ntorch_loader = tdata.DataLoader(\n    dataset(ds.uri).to_pytorch(transform=_custom_transform), batch_size=1\n)\nitem = next(iter(torch_loader))\nassert isinstance(item["label"], torch.Tensor)\nassert item["txt"][0] in ("custom-data-0", "custom-data-1")\n')),(0,l.kt)("h3",{id:"to_tensorflow"},"to_tensorflow"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"to_tensorflow")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u80fd\u591f\u5c06 Starwhale \u6570\u636e\u96c6\u8f6c\u5316\u4e3a Tensorflow \u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"tensorflow.data.Dataset")," \u7c7b\u578b\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def to_tensorflow(self, drop_index: bool = True) -> tensorflow.data.Dataset:\n")),(0,l.kt)("h4",{id:"tf-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"drop_index"),": (bool, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u662f\u5426\u629b\u5f03\u6389 ",(0,l.kt)("inlineCode",{parentName:"li"},"index")," \u5b57\u6bb5\u3002")))),(0,l.kt)("h4",{id:"tf-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset\nimport tensorflow as tf\n\nds = dataset("mnist")\ntf_ds = ds.to_tensorflow(drop_index=True)\nassert isinstance(tf_ds, tf.data.Dataset)\n')),(0,l.kt)("h3",{id:"with_builder_blob_config"},"with_builder_blob_config"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"with_builder_blob_config")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7528\u6765\u8bbe\u7f6e Starwhale \u6570\u636e\u96c6\u4e2d blob \u7684\u76f8\u5173\u5c5e\u6027\u4fe1\u606f\u3002\u9700\u8981\u5728\u53d8\u66f4\u6570\u636e\u4e4b\u524d\u8c03\u7528\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def with_builder_blob_config(\n    self,\n    volume_size: int | str | None = D_FILE_VOLUME_SIZE,\n    alignment_size: int | str | None = D_ALIGNMENT_SIZE,\n) -> Dataset:\n")),(0,l.kt)("h4",{id:"builder-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"volume_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u5355\u4e2a\u6570\u636e\u96c6 blob \u6587\u4ef6\u7684\u5927\u5c0f\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a 64MB\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u7c7b\u578b\u4e3a int \u65f6\uff0c\u5355\u4f4d\u4e3a Bytes\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53\u7c7b\u578b\u4e3a str \u662f\uff0c\u683c\u5f0f\u7c7b\u4f3c ",(0,l.kt)("inlineCode",{parentName:"li"},"1GB"),", ",(0,l.kt)("inlineCode",{parentName:"li"},"64MB"),"\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"alignment_size"),": (int|str, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u6570\u636e\u96c6 blob \u6587\u4ef6\u4e2d\u6570\u636e\u5bf9\u9f50\u7684\u5927\u5c0f"),(0,l.kt)("li",{parentName:"ul"},"\u9ed8\u8ba4\u503c\u4e3a 128\u4e2a\u5b57\u8282\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4e0e ",(0,l.kt)("inlineCode",{parentName:"li"},"volume_size")," \u4e00\u6837\u7684\u7c7b\u578b\u89e3\u6790\u3002")))),(0,l.kt)("h4",{id:"builder-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import dataset, Binary\n\nds = dataset("mnist").with_builder_blob_config(volume_size="32M", alignment_size=128)\nds.append({"data": Binary(b"123")})\nds.commit()\nds.close()\n')),(0,l.kt)("h3",{id:"with_loader_config"},"with_loader_config"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"with_loader_config")," \u662f\u4e00\u4e2a method \u65b9\u6cd5\uff0c\u7528\u6765\u8bbe\u7f6e Starwhale \u6570\u636e\u96c6 loader \u7684\u8fc7\u7a0b\u53c2\u6570\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def with_loader_config(\n    self,\n    num_workers: t.Optional[int] = None,\n    cache_size: t.Optional[int] = None,\n    field_transformer: t.Optional[t.Dict] = None,\n) -> Dataset:\n")),(0,l.kt)("h4",{id:"loader-params"},"\u53c2\u6570"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"num_workers"),": (int, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u52a0\u8f7d\u6570\u636e\u96c6\u7684 worker \u6570\u76ee\uff0c\u9ed8\u8ba4\u4e3a2\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cache_size"),": (int, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"\u9884\u52a0\u8f7d\u7684\u6570\u636e\u7684\u6570\u91cf\uff0c\u9ed8\u8ba4\u4e3a20\u6761\u3002"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"field_transformer"),": (dict, optional)",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"features \u5b57\u6bb5\u540d\u79f0\u7684\u53d8\u6362\u3002")))),(0,l.kt)("h4",{id:"loader-example"},"\u4f7f\u7528\u793a\u4f8b"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import Dataset, dataset\nDataset.from_json(\n    "translation",\n    \'[{"en":"hello","zh-cn":"\u4f60\u597d"},{"en":"how are you","zh-cn":"\u6700\u8fd1\u600e\u4e48\u6837"}]\'\n)\nmyds = dataset("translation").with_loader_config(field_transformer={"en": "en-us"})\nassert myds[0].features["en-us"] == myds[0].features["en"]\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'from starwhale import Dataset, dataset\nDataset.from_json(\n    "translation2",\n    \'[{"content":{"child_content":[{"en":"hello","zh-cn":"\u4f60\u597d"},{"en":"how are you","zh-cn":"\u6700\u8fd1\u600e\u4e48\u6837"}]}}]\'\n)\nmyds = dataset("translation2").with_loader_config(field_transformer={"content.child_content[0].en": "en-us"})\nassert myds[0].features["en-us"] == myds[0].features["content"]["child_content"][0]["en"]\n')))}d.isMDXComponent=!0}}]);